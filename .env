# .env

# ----------------- SERVER CONFIGURATION -----------------
# Define o ambiente da aplicação (development, production, test)
# Em 'development', os erros podem mostrar mais detalhes (stack trace).
# Em 'production', as mensagens de erro são mais genéricas por segurança.
NODE_ENV=development

# Porta em que a API será executada.
PORT=8080

# ----------------- CORS CONFIGURATION -----------------
# Lista de origens (domínios) permitidas para acessar a API, separadas por vírgula.
# Substitua pelo domínio do seu frontend React.
# Exemplo para ambiente de desenvolvimento local com React rodando na porta 3000.
CORS_ALLOWED_ORIGINS=http://localhost:5173

# ----------------- SECURITY & AUTHENTICATION -----------------
# CHAVE SECRETA PARA JWT (JSON Web Token)
# IMPORTANTE: Use uma string longa, complexa e aleatória.
# Você pode gerar uma chave segura usando um gerador online ou o comando:
# node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=e6d19077d753eac7f88686cc21f45ea234a3817f5f44a3cf2fcb989bca3a7296059ba43057c925db99d6e128e4c8dd3b170c0842b6d0507c314c7427b8d9ecb4

# Tempo de expiração do JWT (Access Token).
# Exemplos: "15m" (15 minutos), "1h" (1 hora), "7d" (7 dias)
JWT_EXPIRES_IN=1h

# Custo do algoritmo BCrypt para hash de senhas.
# Um valor entre 10 e 12 é um bom ponto de partida.
# Valores mais altos são mais seguros, mas consomem mais CPU.
BCRYPT_SALT_ROUNDS=10

# ----------------- DATABASE CONFIGURATION (MySQL) -----------------
#DB_HOST=postgresql://localhost
#DB_USER=postgres
#DB_PASSWORD=aWEUztTEWsaAQZVEBcmzhwjKggxyTUUm
#DB_NAME=varejo_da_sorte
#DB_PORT=5432
DATABASE_URL=postgresql://postgres:aWEUztTEWsaAQZVEBcmzhwjKggxyTUUm@localhost:5432/varejo_da_sorte